jobs:
  jlink:
    if: endsWith(${{ needs.precheck.outputs.version }}, '-SNAPSHOT')
    name: Jlink
    needs:
    - precheck
    secrets:
      gpg-passphrase: ${{ secrets.GPG_PASSPHRASE }}
      oci-compartment-id: ${{ secrets.JRELEASER_OCI_COMPARTMENTID }}
    uses: jreleaser/jreleaser/.github/workflows/step-jlink.yml@main
    with:
      project-version: ${{ needs.precheck.outputs.version }}
  jpackage:
    name: JPackage
    needs:
    - precheck
    - jlink
    uses: jreleaser/jreleaser/.github/workflows/step-jpackage.yml@main
    with:
      project-effective-version: early-access
      project-version: ${{ needs.precheck.outputs.version }}
  native-image:
    name: Native Image
    needs:
    - precheck
    - jlink
    secrets:
      gh-access-token: ${{ secrets.GIT_ACCESS_TOKEN }}
    uses: jreleaser/jreleaser/.github/workflows/step-native-image.yml@main
    with:
      project-version: ${{ needs.precheck.outputs.version }}
  precheck:
    name: Precheck
    secrets: inherit
    uses: jreleaser/jreleaser/.github/workflows/step-precheck.yml@main
  provenance:
    name: Provenance
    needs:
    - precheck
    - release
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v1.10.0
    with:
      base64-subjects: ${{ needs.release.outputs.hashes }}
      provenance-name: jreleaser-all-${{ needs.release.outputs.tagname }}.intoto.jsonl
      upload-assets: true
      upload-tag-name: ${{ needs.release.outputs.tagname }}
  release:
    name: Release
    needs:
    - precheck
    - jlink
    - jpackage
    - native-image
    outputs:
      hashes: ${{ steps.slsa.outputs.HASHES }}
      tagname: ${{ steps.slsa.outputs.TAGNAME }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - continue-on-error: true
      name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: artifacts
        path: plugins
    - continue-on-error: true
      name: Download java-archive
      uses: actions/download-artifact@v4
      with:
        name: java-archive
        path: out/jreleaser/assemble/jreleaser/java-archive
    - continue-on-error: true
      name: Download jlink
      uses: actions/download-artifact@v4
      with:
        name: jlink
        path: out/jreleaser/assemble/jreleaser-standalone/jlink
    - continue-on-error: true
      name: Download jpackage
      uses: actions/download-artifact@v4
      with:
        merge-multiple: true
        path: out/jreleaser/assemble/jreleaser-installer/jpackage
        pattern: jpackage-*
    - continue-on-error: true
      name: Download native-image
      uses: actions/download-artifact@v4
      with:
        merge-multiple: true
        path: out/jreleaser/assemble/jreleaser-native/native-image
        pattern: native-image-*
    - continue-on-error: true
      env:
        JRELEASER_DOCKER_DEFAULT_PASSWORD: ${{ secrets.JRELEASER_DOCKER_PASSWORD }}
        JRELEASER_GITHUB_TOKEN: ${{ secrets.GIT_ACCESS_TOKEN }}
        JRELEASER_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.GPG_PUBLIC_KEY }}
        JRELEASER_GPG_SECRET_KEY: ${{ secrets.GPG_SECRET_KEY }}
        JRELEASER_PROJECT_VERSION: ${{ needs.precheck.outputs.version }}
      name: Release
      uses: jreleaser/release-action@v2
      with:
        arguments: full-release
        version: early-access
    - continue-on-error: true
      if: always()
      name: JReleaser release output
      uses: actions/upload-artifact@v4
      with:
        name: jreleaser-release
        path: 'out/jreleaser/trace.log

          out/jreleaser/output.properties

          '
    - continue-on-error: true
      id: slsa
      name: SLSA
      run: 'echo "HASHES=$(cat out/jreleaser/checksums/checksums_sha256.txt | base64
        -w0)" >> "$GITHUB_OUTPUT"

        echo "TAGNAME=$(grep tagName out/jreleaser/output.properties | awk -F''=''
        ''{print $2}'')" >> "$GITHUB_OUTPUT"

        '
      shell: bash
  update-bach-info:
    name: Update Bach Info
    needs:
    - precheck
    - release
    secrets:
      gh-access-token: ${{ secrets.GIT_ACCESS_TOKEN }}
    uses: jreleaser/jreleaser/.github/workflows/step-update-bach-info.yml@main
    with:
      project-tag: ${{ needs.release.outputs.tagname }}
      project-version: ${{ needs.precheck.outputs.version }}
  update-wiki:
    name: Update Wiki
    needs:
    - precheck
    - release
    secrets:
      gh-access-token: ${{ secrets.GIT_ACCESS_TOKEN }}
    uses: jreleaser/jreleaser/.github/workflows/step-update-wiki.yml@main
    with:
      project-tag: ${{ needs.release.outputs.tagname }}
      project-version: ${{ needs.precheck.outputs.version }}
name: EarlyAccess
on:
  repository_dispatch:
    types: trigger-ga___early-access.yml
permissions:
  actions: write
  contents: write
  id-token: write
