jobs:
  jlink:
    name: Jlink
    needs:
    - precheck
    secrets:
      gpg-passphrase: ${{ secrets.GPG_PASSPHRASE }}
      oci-compartment-id: ${{ secrets.JRELEASER_OCI_COMPARTMENTID }}
    uses: jreleaser/jreleaser/.github/workflows/step-jlink.yml@main
    with:
      project-version: ${{ needs.precheck.outputs.version }}
  jpackage:
    name: JPackage
    needs:
    - precheck
    - jlink
    uses: jreleaser/jreleaser/.github/workflows/step-jpackage.yml@main
    with:
      project-effective-version: ${{ needs.precheck.outputs.version }}
      project-version: ${{ needs.precheck.outputs.version }}
  native-image:
    name: Native Image
    needs:
    - precheck
    - jlink
    secrets:
      gh-access-token: ${{ secrets.GIT_ACCESS_TOKEN }}
    uses: jreleaser/jreleaser/.github/workflows/step-native-image.yml@main
    with:
      project-version: ${{ needs.precheck.outputs.version }}
  precheck:
    name: Precheck
    outputs:
      version: ${{ steps.vars.outputs.VERSION }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout
      uses: actions/checkout@v4
    - continue-on-error: true
      id: vars
      name: Version
      run: 'echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT

        echo ${{ github.event.inputs.version }} > VERSION

        git add VERSION

        sed -i -e "s/^\:project-version\:\ .*/:project-version: ${{ github.event.inputs.version
        }}/g" README.adoc

        git config --global user.email "${{ secrets.COMMIT_EMAIL }}"

        git config --global user.name "Andres Almiray"

        git commit -a -m "Releasing version ${{ github.event.inputs.version }}"

        git push origin main

        '
      shell: bash
  provenance:
    name: Provenance
    needs:
    - precheck
    - release
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v1.10.0
    with:
      base64-subjects: ${{ needs.release.outputs.hashes }}
      provenance-name: jreleaser-all-${{ needs.precheck.outputs.version }}.intoto.jsonl
      upload-assets: true
      upload-tag-name: ${{ needs.release.outputs.tagname }}
  release:
    name: Release
    needs:
    - precheck
    - jlink
    - jpackage
    - native-image
    outputs:
      hashes: ${{ steps.slsa.outputs.HASHES }}
      tagname: ${{ steps.slsa.outputs.TAGNAME }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: main
    - continue-on-error: true
      name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: artifacts
        path: plugins
    - continue-on-error: true
      name: Download java-archive
      uses: actions/download-artifact@v4
      with:
        name: java-archive
        path: out/jreleaser/assemble/jreleaser/java-archive
    - continue-on-error: true
      name: Download jlink
      uses: actions/download-artifact@v4
      with:
        name: jlink
        path: out/jreleaser/assemble/jreleaser-standalone/jlink
    - continue-on-error: true
      name: Download jpackage
      uses: actions/download-artifact@v4
      with:
        merge-multiple: true
        path: out/jreleaser/assemble/jreleaser-installer/jpackage
        pattern: jpackage-*
    - continue-on-error: true
      name: Download native-image
      uses: actions/download-artifact@v4
      with:
        merge-multiple: true
        path: out/jreleaser/assemble/jreleaser-native/native-image
        pattern: native-image-*
    - continue-on-error: true
      name: Setup Java
      uses: actions/setup-java@v4
      with:
        cache: gradle
        distribution: ${{ vars.JAVA_DISTRO }}
        java-version: ${{ vars.JAVA_VERSION }}
    - continue-on-error: true
      env:
        GRADLE_PUBLISH_KEY: ${{ secrets.GRADLE_PUBLISH_KEY }}
        GRADLE_PUBLISH_SECRET: ${{ secrets.GRADLE_PUBLISH_SECRET }}
      name: Deploy
      run: './gradlew -Pprofile=sbom -PreproducibleBuild=true publishPlugins publish
        -S

        ./gradlew cleanupStagedRepository

        '
    - continue-on-error: true
      name: Upload deploy artifacts
      uses: actions/upload-artifact@v4
      with:
        name: deploy
        path: 'build/repos/local/release/

          '
        retention-days: 7
    - continue-on-error: true
      env:
        JRELEASER_BLUESKY_HANDLE: ${{ secrets.BLUESKY_HANDLE }}
        JRELEASER_BLUESKY_HOST: ${{ secrets.BLUESKY_HOST }}
        JRELEASER_BLUESKY_PASSWORD: ${{ secrets.BLUESKY_PASSWORD }}
        JRELEASER_DOCKER_DEFAULT_PASSWORD: ${{ secrets.JRELEASER_DOCKER_PASSWORD }}
        JRELEASER_GITHUB_TOKEN: ${{ secrets.GIT_ACCESS_TOKEN }}
        JRELEASER_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.GPG_PUBLIC_KEY }}
        JRELEASER_GPG_SECRET_KEY: ${{ secrets.GPG_SECRET_KEY }}
        JRELEASER_HTTP_NOTICEABLE_PASSWORD: ${{ secrets.NOTICEABLE_APIKEY }}
        JRELEASER_MASTODON_ACCESS_TOKEN: ${{ secrets.MASTODON_ACCESS_TOKEN }}
        JRELEASER_NEXUS2_MAVEN_CENTRAL_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
        JRELEASER_NEXUS2_MAVEN_CENTRAL_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
        JRELEASER_OPENCOLLECTIVE_TOKEN: ${{ secrets.OPENCOLLECTIVE_TOKEN }}
        JRELEASER_PROJECT_VERSION: ${{ needs.precheck.outputs.version }}
        JRELEASER_SDKMAN_CONSUMER_KEY: ${{ secrets.SDKMAN_CONSUMER_KEY }}
        JRELEASER_SDKMAN_CONSUMER_TOKEN: ${{ secrets.SDKMAN_CONSUMER_TOKEN }}
        JRELEASER_TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
        JRELEASER_TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET
          }}
        JRELEASER_TWITTER_CONSUMER_KEY: ${{ secrets.TWITTER_CONSUMER_KEY }}
        JRELEASER_TWITTER_CONSUMER_SECRET: ${{ secrets.TWITTER_CONSUMER_SECRET }}
        NOTICEABLE_AUTHOR_EMAIL: ${{ secrets.NOTICEABLE_AUTHOR_EMAIL }}
        NOTICEABLE_PROJECTID: ${{ secrets.NOTICEABLE_PROJECTID }}
      name: Release
      uses: jreleaser/release-action@v2
      with:
        arguments: full-release
        version: early-access
    - continue-on-error: true
      if: always()
      name: JReleaser release output
      uses: actions/upload-artifact@v4
      with:
        name: jreleaser-release
        path: 'out/jreleaser/trace.log

          out/jreleaser/output.properties

          '
    - continue-on-error: true
      id: slsa
      name: SLSA
      run: 'echo "HASHES=$(cat out/jreleaser/checksums/checksums_sha256.txt | base64
        -w0)" >> "$GITHUB_OUTPUT"

        echo "TAGNAME=$(grep tagName out/jreleaser/output.properties | awk -F''=''
        ''{print $2}'')" >> "$GITHUB_OUTPUT"

        '
      shell: bash
  update-bach-info:
    name: Update Bach Info
    needs:
    - precheck
    - release
    secrets:
      gh-access-token: ${{ secrets.GIT_ACCESS_TOKEN }}
    uses: jreleaser/jreleaser/.github/workflows/step-update-bach-info.yml@main
    with:
      project-tag: ${{ needs.release.outputs.tagname }}
      project-version: ${{ needs.precheck.outputs.version }}
  update-website:
    name: Update Website
    needs:
    - precheck
    - release
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: main
        repository: jreleaser/jreleaser.github.io
        token: ${{ secrets.GIT_ACCESS_TOKEN }}
    - continue-on-error: true
      name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: ${{ vars.JAVA_DISTRO }}
        java-version: ${{ vars.JAVA_VERSION }}
    - continue-on-error: true
      env:
        TAG: ${{ needs.release.outputs.tagname }}
        VERSION: ${{ needs.precheck.outputs.version }}
      name: Download assets
      run: 'curl -sL https://raw.githubusercontent.com/jreleaser/jreleaser/main/.github/scripts/update-website.sh
        --output update-website.sh

        curl -sL "https://github.com/jreleaser/jreleaser/releases/download/${TAG}/jreleaser-tool-provider-${VERSION}.jar"
        --output jreleaser-cli.jar

        '
      shell: bash
    - continue-on-error: true
      env:
        GH_BOT_EMAIL: ${{ vars.GH_BOT_EMAIL }}
        TAG: ${{ needs.release.outputs.tagname }}
        VERSION: ${{ needs.precheck.outputs.version }}
      name: Commit
      run: 'chmod +x update-website.sh

        ./update-website.sh

        '
      shell: bash
  update-wiki:
    name: Update Wiki
    needs:
    - precheck
    - release
    secrets:
      gh-access-token: ${{ secrets.GIT_ACCESS_TOKEN }}
    uses: jreleaser/jreleaser/.github/workflows/step-update-wiki.yml@main
    with:
      project-tag: ${{ needs.release.outputs.tagname }}
      project-version: ${{ needs.precheck.outputs.version }}
      template-params: -PincludeSboms
name: Release
on:
  repository_dispatch:
    types: trigger-ga___release.yml
permissions:
  actions: write
  contents: write
  id-token: write
