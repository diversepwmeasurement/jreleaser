env:
  CI: true
  GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
  JRELEASER_OCI_COMPARTMENTID: ${{ secrets.JRELEASER_OCI_COMPARTMENTID }}
jobs:
  build-ant:
    continue-on-error: true
    if: endsWith(${{ needs.precheck.outputs.version }}, '-SNAPSHOT')
    name: Ant ${{ matrix.job.os }}
    needs:
    - precheck
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - continue-on-error: true
      name: Decrypt secrets
      run: sh .github/scripts/decrypt-secrets.sh
      shell: bash
    - continue-on-error: true
      name: Setup Java
      uses: actions/setup-java@v4
      with:
        cache: gradle
        distribution: ${{ vars.JAVA_DISTRO }}
        java-version: ${{ vars.JAVA_VERSION }}
    - continue-on-error: true
      name: Build
      run: ./gradlew -PreproducibleBuild=true build publishToMavenLocal -S
      shell: bash
    - continue-on-error: true
      name: Checkout smoketests repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        path: smoketests-jreleaser
        repository: jreleaser/smoketests-jreleaser
        token: ${{ secrets.GIT_ACCESS_TOKEN }}
    - continue-on-error: true
      name: Cache Maven packages
      uses: actions/cache@v4
      with:
        key: setup-java-${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        path: ~/.m2/repository
        restore-keys: ${{ runner.os }}-m2
    - continue-on-error: true
      name: Prepare
      run: 'cd smoketests-jreleaser

        mkdir lib

        unzip -dlib -qo ../plugins/jreleaser-ant-tasks/build/distributions/jreleaser-ant-tasks-${{
        needs.precheck.outputs.version }}.zip

        sed -i -e "s/0.0.0-SNAPSHOT/${{ needs.precheck.outputs.version }}/g" pom.xml

        sed -i -e "s/0.0.0-SNAPSHOT/${{ needs.precheck.outputs.version }}/g" build.xml

        sed -i -e "s/0.0.0-SNAPSHOT/${{ needs.precheck.outputs.version }}/g" gradle.properties

        sh ../.github/scripts/jacoco-instrument.sh

        '
      shell: bash
    - continue-on-error: true
      name: Setup Graal
      uses: graalvm/setup-graalvm@v1
      with:
        github-token: ${{ secrets.GIT_ACCESS_TOKEN }}
        java-version: ${{ vars.GRAAL_JAVA_VERSION }}
        version: ${{ vars.GRAAL_VERSION }}
    - continue-on-error: true
      env:
        ANT_OPTS: -javaagent:jacoco/jacocoagent.jar=includes=*jreleaser*,destfile=jreleaser-ant-${{
          runner.os }}.exec
        JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        JRELEASER_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.GPG_PUBLIC_KEY }}
        JRELEASER_GPG_SECRET_KEY: ${{ secrets.GPG_SECRET_KEY }}
        JRELEASER_OUTPUT_DIRECTORY: out
        JRELEASER_PROJECT_VERSION: 1.0.0
        JRELEASER_USER_HOME: ${{ github.workspace }}/smoketests-jreleaser/.jreleaser
      name: JReleaser
      run: "cd smoketests-jreleaser\necho \"::group::\u27A1\uFE0F build\"\nchmod +x\
        \ gradlew\n./gradlew build\nchmod +x mvnw\n./mvnw -B -ntp deploy -DaltDeploymentRepository=local::file:./target/staging-deploy\n\
        echo \"::endgroup::\"\necho \"::group::\u27A1\uFE0F json-schema\"\nant jreleaser-json-schema\n\
        echo \"::endgroup::\"\necho \"::group::\u27A1\uFE0F env\"\nant jreleaser-env\n\
        echo \"::endgroup::\"\necho \"::group::\u27A1\uFE0F assemble\"\nant jreleaser-assemble\
        \ -DoutputDir=build\necho \"::endgroup::\"\necho \"::group::\u27A1\uFE0F config\"\
        \nant jreleaser-config -DoutputDir=build\necho \"::endgroup::\"\necho \"::group::\u27A1\
        \uFE0F changelog\"\nant jreleaser-changelog -DoutputDir=build\necho \"::endgroup::\"\
        \necho \"::group::\u27A1\uFE0F download\"\nant jreleaser-download -DoutputDir=build\
        \ -Djreleaser.dry.run=true\necho \"::endgroup::\"\necho \"::group::\u27A1\uFE0F\
        \ catalog\"\nant jreleaser-catalog -DoutputDir=build -Djreleaser.select.current.platform=true\n\
        echo \"::endgroup::\"\necho \"::group::\u27A1\uFE0F checksum\"\nant jreleaser-checksum\
        \ -DoutputDir=build -Djreleaser.select.current.platform=true\necho \"::endgroup::\"\
        \necho \"::group::\u27A1\uFE0F sign\"\nant jreleaser-sign -DoutputDir=build\
        \ -Djreleaser.select.current.platform=true\necho \"::endgroup::\"\necho \"\
        ::group::\u27A1\uFE0F deploy\"\nant jreleaser-deploy -DoutputDir=build -Djreleaser.dry.run=true\n\
        echo \"::endgroup::\"\necho \"::group::\u27A1\uFE0F upload\"\nant jreleaser-upload\
        \ -DoutputDir=build -Djreleaser.select.current.platform=true -Djreleaser.dry.run=true\n\
        echo \"::endgroup::\"\necho \"::group::\u27A1\uFE0F release\"\nant jreleaser-release\
        \ -DoutputDir=build -Djreleaser.select.current.platform=true -Djreleaser.dry.run=true\n\
        echo \"::endgroup::\"\necho \"::group::\u27A1\uFE0F prepare\"\nant jreleaser-prepare\
        \ -DoutputDir=build -Djreleaser.select.current.platform=true ${{ matrix.job.args\
        \ }}\necho \"::endgroup::\"\necho \"::group::\u27A1\uFE0F package\"\nant jreleaser-package\
        \ -DoutputDir=build -Djreleaser.select.current.platform=true ${{ matrix.job.args\
        \ }} \necho \"::endgroup::\"\necho \"::group::\u27A1\uFE0F publish\"\nant\
        \ jreleaser-publish -DoutputDir=build -Djreleaser.select.current.platform=true\
        \ -Djreleaser.dry.run=true ${{ matrix.job.args }} \necho \"::endgroup::\"\n\
        echo \"::group::\u27A1\uFE0F full-release\"\nant jreleaser-full-release -DoutputDir=build\
        \ -Djreleaser.select.current.platform=true -Djreleaser.dry.run=true ${{ matrix.job.args\
        \ }} \necho \"::endgroup::\"\necho \"::group::\u27A1\uFE0F announce\"\nant\
        \ jreleaser-announce -DoutputDir=build -Djreleaser.dry.run=true\necho \"::endgroup::\"\
        \necho \"::group::\u27A1\uFE0F template generate\"\nant jreleaser-template-generate\
        \ -Djreleaser.announcer.name=discord\nant jreleaser-template-generate -Djreleaser.assembler.type=jlink\
        \ -Djreleaser.assembler.name=app-standalone\nant jreleaser-template-generate\
        \ -Djreleaser.packager.name=brew -Djreleaser.distribution.name=app\necho \"\
        ::endgroup::\"\necho \"::group::\u27A1\uFE0F init\"\nant jreleaser-init -Djreleaser.overwrite=true\
        \ -Djreleaser.format=yml\nant jreleaser-init -Djreleaser.overwrite=true -Djreleaser.format=toml\n\
        ant jreleaser-init -Djreleaser.overwrite=true -Djreleaser.format=json\necho\
        \ \"::endgroup::\"\n"
      shell: bash
    - continue-on-error: true
      if: always()
      name: JReleaser output
      uses: actions/upload-artifact@v4
      with:
        name: jreleaser-ant-${{ runner.os }}
        path: 'smoketests-jreleaser/build/jreleaser/trace.log

          smoketests-jreleaser/build/jreleaser/output.properties

          smoketests-jreleaser/build/jreleaser/release/CHANGELOG.md

          smoketests-jreleaser/build/jreleaser/prepare

          '
        retention-days: 7
    - continue-on-error: true
      if: always()
      name: JaCoCo upload
      uses: actions/upload-artifact@v4
      with:
        name: jacoco-ant-${{ runner.os }}
        path: smoketests-jreleaser/*.exec
        retention-days: 1
    - continue-on-error: true
      if: always()
      name: Cleanup
      run: './gradlew -stop

        rm -rf ~/.m2/repository/org/jreleaser

        rm -rf ~/.gradle/caches/modules-2/files-2.1/org.jreleaser

        '
      shell: bash
    strategy:
      fail-fast: false
      matrix:
        job:
        - args: -Djreleaser.excluded.packagers=docker
          os: macos-latest
        - args: ''
          os: ubuntu-latest
        - args: -Djreleaser.excluded.packagers=docker
          os: windows-latest
  build-cli:
    continue-on-error: true
    if: endsWith(${{ needs.precheck.outputs.version }}, '-SNAPSHOT')
    name: CLI ${{ matrix.job.os }}
    needs:
    - precheck
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - continue-on-error: true
      name: Decrypt secrets
      run: sh .github/scripts/decrypt-secrets.sh
      shell: bash
    - continue-on-error: true
      name: Setup Java
      uses: actions/setup-java@v4
      with:
        cache: gradle
        distribution: ${{ vars.JAVA_DISTRO }}
        java-version: ${{ vars.JAVA_VERSION }}
    - continue-on-error: true
      name: Build
      run: ./gradlew -PreproducibleBuild=true build publishToMavenLocal -S
      shell: bash
    - continue-on-error: true
      name: Checkout smoketests repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        path: smoketests-jreleaser
        repository: jreleaser/smoketests-jreleaser
        token: ${{ secrets.GIT_ACCESS_TOKEN }}
    - continue-on-error: true
      name: Cache Maven packages
      uses: actions/cache@v4
      with:
        key: setup-java-${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        path: ~/.m2/repository
        restore-keys: ${{ runner.os }}-m2
    - continue-on-error: true
      name: Prepare
      run: 'cd smoketests-jreleaser

        unzip -qo ../plugins/jreleaser/build/distributions/jreleaser-${{ needs.precheck.outputs.version
        }}.zip

        sed -i -e "s/0.0.0-SNAPSHOT/${{ needs.precheck.outputs.version }}/g" pom.xml

        sed -i -e "s/0.0.0-SNAPSHOT/${{ needs.precheck.outputs.version }}/g" build.xml

        sed -i -e "s/0.0.0-SNAPSHOT/${{ needs.precheck.outputs.version }}/g" gradle.properties

        sh ../.github/scripts/jacoco-instrument.sh

        '
      shell: bash
    - continue-on-error: true
      name: Setup Graal
      uses: graalvm/setup-graalvm@v1
      with:
        github-token: ${{ secrets.GIT_ACCESS_TOKEN }}
        java-version: ${{ vars.GRAAL_JAVA_VERSION }}
        version: ${{ vars.GRAAL_VERSION }}
    - continue-on-error: true
      env:
        JAVA_OPTS: -javaagent:jacoco/jacocoagent.jar=includes=*jreleaser*,destfile=jreleaser-cli-${{
          runner.os }}.exec
        JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        JRELEASER_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.GPG_PUBLIC_KEY }}
        JRELEASER_GPG_SECRET_KEY: ${{ secrets.GPG_SECRET_KEY }}
        JRELEASER_OUTPUT_DIRECTORY: out
        JRELEASER_PROJECT_VERSION: 1.0.0
        JRELEASER_USER_HOME: ${{ github.workspace }}/smoketests-jreleaser/.jreleaser
      name: JReleaser
      run: "cd smoketests-jreleaser\necho \"::group::\u27A1\uFE0F build\"\nchmod +x\
        \ gradlew\n./gradlew build\nchmod +x mvnw\n./mvnw -B -ntp deploy -DaltDeploymentRepository=local::file:./target/staging-deploy\n\
        echo \"::endgroup::\"\necho \"::group::\u27A1\uFE0F json-schema\"\n./jreleaser-${{\
        \ needs.precheck.outputs.version }}/bin/jreleaser json-schema\necho \"::endgroup::\"\
        \necho \"::group::\u27A1\uFE0F env\"\n./jreleaser-${{ needs.precheck.outputs.version\
        \ }}/bin/jreleaser env\necho \"::endgroup::\"\necho \"::group::\u27A1\uFE0F\
        \ assemble\"\n./jreleaser-${{ needs.precheck.outputs.version }}/bin/jreleaser\
        \ assemble -PoutputDir=out\necho \"::endgroup::\"\necho \"::group::\u27A1\uFE0F\
        \ config\"\n./jreleaser-${{ needs.precheck.outputs.version }}/bin/jreleaser\
        \ config -PoutputDir=out\necho \"::endgroup::\"\necho \"::group::\u27A1\uFE0F\
        \ changelog\"\n./jreleaser-${{ needs.precheck.outputs.version }}/bin/jreleaser\
        \ changelog -PoutputDir=out\necho \"::endgroup::\"\necho \"::group::\u27A1\
        \uFE0F download\"\n./jreleaser-${{ needs.precheck.outputs.version }}/bin/jreleaser\
        \ download -PoutputDir=out --dry-run\necho \"::endgroup::\"\necho \"::group::\u27A1\
        \uFE0F catalog\"\n./jreleaser-${{ needs.precheck.outputs.version }}/bin/jreleaser\
        \ catalog -PoutputDir=out --select-current-platform\necho \"::endgroup::\"\
        \necho \"::group::\u27A1\uFE0F checksum\"\n./jreleaser-${{ needs.precheck.outputs.version\
        \ }}/bin/jreleaser checksum -PoutputDir=out --select-current-platform\necho\
        \ \"::endgroup::\"\necho \"::group::\u27A1\uFE0F sign\"\n./jreleaser-${{ needs.precheck.outputs.version\
        \ }}/bin/jreleaser sign -PoutputDir=out --select-current-platform\necho \"\
        ::endgroup::\"\necho \"::group::\u27A1\uFE0F deploy\"\n./jreleaser-${{ needs.precheck.outputs.version\
        \ }}/bin/jreleaser deploy -PoutputDir=out --dry-run\necho \"::endgroup::\"\
        \necho \"::group::\u27A1\uFE0F upload\"\n./jreleaser-${{ needs.precheck.outputs.version\
        \ }}/bin/jreleaser upload --select-current-platform -PoutputDir=out --dry-run\n\
        echo \"::endgroup::\"\necho \"::group::\u27A1\uFE0F release\"\n./jreleaser-${{\
        \ needs.precheck.outputs.version }}/bin/jreleaser release --select-current-platform\
        \ -PoutputDir=out --dry-run\necho \"::endgroup::\"\necho \"::group::\u27A1\
        \uFE0F prepare\"\n./jreleaser-${{ needs.precheck.outputs.version }}/bin/jreleaser\
        \ prepare --select-current-platform -PoutputDir=out ${{ matrix.job.args }}\n\
        echo \"::endgroup::\"\necho \"::group::\u27A1\uFE0F package\"\n./jreleaser-${{\
        \ needs.precheck.outputs.version }}/bin/jreleaser package --select-current-platform\
        \ -PoutputDir=out ${{ matrix.job.args }}\necho \"::endgroup::\"\necho \"::group::\u27A1\
        \uFE0F publish\"\n./jreleaser-${{ needs.precheck.outputs.version }}/bin/jreleaser\
        \ publish --select-current-platform -PoutputDir=out --dry-run ${{ matrix.job.args\
        \ }}\necho \"::endgroup::\"\necho \"::group::\u27A1\uFE0F full-release\"\n\
        ./jreleaser-${{ needs.precheck.outputs.version }}/bin/jreleaser full-release\
        \ -PoutputDir=out --select-current-platform --dry-run ${{ matrix.job.args\
        \ }}\necho \"::endgroup::\"\necho \"::group::\u27A1\uFE0F announce\"\n./jreleaser-${{\
        \ needs.precheck.outputs.version }}/bin/jreleaser announce -PoutputDir=out\
        \ --dry-run\necho \"::endgroup::\"\necho \"::group::\u27A1\uFE0F template\
        \ generate\"\n./jreleaser-${{ needs.precheck.outputs.version }}/bin/jreleaser\
        \ template generate --announcer discord\n./jreleaser-${{ needs.precheck.outputs.version\
        \ }}/bin/jreleaser template generate --assembler-type jlink --assembler-name\
        \ app-standalone\n./jreleaser-${{ needs.precheck.outputs.version }}/bin/jreleaser\
        \ template generate --packager brew --distribution app\necho \"::endgroup::\"\
        \necho \"::group::\u27A1\uFE0F init\"\n./jreleaser-${{ needs.precheck.outputs.version\
        \ }}/bin/jreleaser init --overwrite --format yml\n./jreleaser-${{ needs.precheck.outputs.version\
        \ }}/bin/jreleaser init --overwrite --format toml\n./jreleaser-${{ needs.precheck.outputs.version\
        \ }}/bin/jreleaser init --overwrite --format json\necho \"::endgroup::\"\n\
        echo \"::group::\u27A1\uFE0F auto-config\"\n./jreleaser-${{ needs.precheck.outputs.version\
        \ }}/bin/jreleaser release --auto-config --dry-run\necho \"::endgroup::\"\n"
      shell: bash
    - continue-on-error: true
      if: always()
      name: JReleaser output
      uses: actions/upload-artifact@v4
      with:
        name: jreleaser-cli-${{ runner.os }}
        path: 'smoketests-jreleaser/out/jreleaser/trace.log

          smoketests-jreleaser/out/jreleaser/output.properties

          smoketests-jreleaser/out/jreleaser/release/CHANGELOG.md

          smoketests-jreleaser/out/jreleaser/prepare

          '
        retention-days: 7
    - continue-on-error: true
      if: always()
      name: JaCoCo upload
      uses: actions/upload-artifact@v4
      with:
        name: jacoco-cli-${{ runner.os }}
        path: smoketests-jreleaser/*.exec
        retention-days: 1
    - continue-on-error: true
      if: always()
      name: Cleanup
      run: "./gradlew -stop\nrm -rf ~/.m2/repository/org/jreleaser\nrm -rf ~/.gradle/caches/modules-2/files-2.1/org.jreleaser\
        \          \n"
      shell: bash
    strategy:
      fail-fast: false
      matrix:
        job:
        - args: -xp docker
          os: macos-latest
        - args: ''
          os: ubuntu-latest
        - args: -xp docker
          os: windows-latest
  build-gradle:
    continue-on-error: true
    if: endsWith(${{ needs.precheck.outputs.version }}, '-SNAPSHOT')
    name: Gradle ${{ matrix.job.os }}
    needs:
    - precheck
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - continue-on-error: true
      name: Decrypt secrets
      run: sh .github/scripts/decrypt-secrets.sh
      shell: bash
    - continue-on-error: true
      name: Setup Java
      uses: actions/setup-java@v4
      with:
        cache: gradle
        distribution: ${{ vars.JAVA_DISTRO }}
        java-version: ${{ vars.JAVA_VERSION }}
    - continue-on-error: true
      name: Build
      run: ./gradlew -PreproducibleBuild=true build publishToMavenLocal -S
      shell: bash
    - continue-on-error: true
      name: Checkout smoketests repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        path: smoketests-jreleaser
        repository: jreleaser/smoketests-jreleaser
        token: ${{ secrets.GIT_ACCESS_TOKEN }}
    - continue-on-error: true
      name: Cache Maven packages
      uses: actions/cache@v4
      with:
        key: setup-java-${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        path: ~/.m2/repository
        restore-keys: ${{ runner.os }}-m2
    - continue-on-error: true
      name: Prepare
      run: 'cd smoketests-jreleaser

        sed -i -e "s/0.0.0-SNAPSHOT/${{ needs.precheck.outputs.version }}/g" pom.xml

        sed -i -e "s/0.0.0-SNAPSHOT/${{ needs.precheck.outputs.version }}/g" build.xml

        sed -i -e "s/0.0.0-SNAPSHOT/${{ needs.precheck.outputs.version }}/g" gradle.properties

        sh ../.github/scripts/jacoco-instrument.sh

        '
      shell: bash
    - continue-on-error: true
      name: Setup Graal
      uses: graalvm/setup-graalvm@v1
      with:
        github-token: ${{ secrets.GIT_ACCESS_TOKEN }}
        java-version: ${{ vars.GRAAL_JAVA_VERSION }}
        version: ${{ vars.GRAAL_VERSION }}
    - continue-on-error: true
      env:
        JAVA_OPTS: -javaagent:jacoco/jacocoagent.jar=includes=*jreleaser*,destfile=jreleaser-gradle-${{
          runner.os }}.exec
        JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        JRELEASER_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.GPG_PUBLIC_KEY }}
        JRELEASER_GPG_SECRET_KEY: ${{ secrets.GPG_SECRET_KEY }}
        JRELEASER_OUTPUT_DIRECTORY: out
        JRELEASER_PROJECT_VERSION: 1.0.0
        JRELEASER_USER_HOME: ${{ github.workspace }}/smoketests-jreleaser/.jreleaser
      name: JReleaser
      run: "cd smoketests-jreleaser\necho \"::group::\u27A1\uFE0F build\"\nchmod +x\
        \ gradlew\n./gradlew build\nchmod +x mvnw\n./mvnw -B -ntp deploy -DaltDeploymentRepository=local::file:./target/staging-deploy\n\
        ./gradlew jreleaserJsonSchema -S\necho \"::endgroup::\"\necho \"::group::\u27A1\
        \uFE0F env\"\n./gradlew jreleaserEnv -S\necho \"::endgroup::\"\necho \"::group::\u27A1\
        \uFE0F assemble\"\n./gradlew jreleaserAssemble -PoutputDir=build -S\necho\
        \ \"::endgroup::\"\necho \"::group::\u27A1\uFE0F config\"\n./gradlew jreleaserConfig\
        \ -PoutputDir=build -S\necho \"::endgroup::\"\necho \"::group::\u27A1\uFE0F\
        \ changelog\"\n./gradlew jreleaserChangelog -PoutputDir=build -S\necho \"\
        ::endgroup::\"\necho \"::group::\u27A1\uFE0F download\"\n./gradlew jreleaserDownload\
        \ -PoutputDir=build -S\necho \"::endgroup::\"\necho \"::group::\u27A1\uFE0F\
        \ catalog\"\n./gradlew jreleaserCatalog -PoutputDir=build --select-current-platform\
        \ -S\necho \"::endgroup::\"\necho \"::group::\u27A1\uFE0F checksum\"\n./gradlew\
        \ jreleaserChecksum -PoutputDir=build --select-current-platform -S\necho \"\
        ::endgroup::\"\necho \"::group::\u27A1\uFE0F sign\"\n./gradlew jreleaserSign\
        \ -PoutputDir=build --select-current-platform -S\necho \"::endgroup::\"\n\
        echo \"::group::\u27A1\uFE0F deploy\"\n./gradlew jreleaserDeploy -PoutputDir=build\
        \ -S\necho \"::endgroup::\"\necho \"::group::\u27A1\uFE0F upload\"\n./gradlew\
        \ jreleaserUpload -PoutputDir=build --select-current-platform -S\necho \"\
        ::endgroup::\"\necho \"::group::\u27A1\uFE0F release\"\n./gradlew jreleaserRelease\
        \ -PoutputDir=build --select-current-platform -S\necho \"::endgroup::\"\n\
        echo \"::group::\u27A1\uFE0F prepare\"\n./gradlew jreleaserPrepare -PoutputDir=build\
        \ --select-current-platform  ${{ matrix.job.args }} -S\necho \"::endgroup::\"\
        \necho \"::group::\u27A1\uFE0F package\"\n./gradlew jreleaserPackage -PoutputDir=build\
        \ --select-current-platform  ${{ matrix.job.args }} -S\necho \"::endgroup::\"\
        \necho \"::group::\u27A1\uFE0F publish\"\n./gradlew jreleaserPublish -PoutputDir=build\
        \ --select-current-platform  ${{ matrix.job.args }} -S\necho \"::endgroup::\"\
        \necho \"::group::\u27A1\uFE0F full-release\"\n./gradlew jreleaserFullRelease\
        \ -PoutputDir=build --select-current-platform  ${{ matrix.job.args }} -S\n\
        echo \"::endgroup::\"\necho \"::group::\u27A1\uFE0F announce\"\n./gradlew\
        \ jreleaserAnnounce -PoutputDir=build -S\necho \"::endgroup::\"\necho \"::group::\u27A1\
        \uFE0F template generate\"\n./gradlew jreleaserTemplateGenerate -S --announcer-name\
        \ discord\n./gradlew jreleaserTemplateGenerate -S --assembler-type jlink --assembler-name\
        \ app-standalone\n./gradlew jreleaserTemplateGenerate -S --packager-name brew\
        \ --distribution-name app\necho \"::endgroup::\"\necho \"::group::\u27A1\uFE0F\
        \ init\"\n./gradlew jreleaserInit -S --overwrite --format yml\n./gradlew jreleaserInit\
        \ -S --overwrite --format toml\n./gradlew jreleaserInit -S --overwrite --format\
        \ json\necho \"::endgroup::\"\necho \"::group::\u27A1\uFE0F auto-config\"\n\
        ./gradlew jreleaserAutoConfigRelease -S\necho \"::endgroup::\"\n"
      shell: bash
    - continue-on-error: true
      if: always()
      name: JReleaser output
      uses: actions/upload-artifact@v4
      with:
        name: jreleaser-gradle-${{ runner.os }}
        path: 'smoketests-jreleaser/build/jreleaser/trace.log

          smoketests-jreleaser/build/jreleaser/output.properties

          smoketests-jreleaser/build/jreleaser/release/CHANGELOG.md

          smoketests-jreleaser/build/jreleaser/prepare

          '
        retention-days: 7
    - continue-on-error: true
      if: always()
      name: JaCoCo upload
      uses: actions/upload-artifact@v4
      with:
        name: jacoco-gradle-${{ runner.os }}
        path: smoketests-jreleaser/*.exec
        retention-days: 1
    - continue-on-error: true
      env:
        JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        JRELEASER_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.GPG_PUBLIC_KEY }}
        JRELEASER_GPG_SECRET_KEY: ${{ secrets.GPG_SECRET_KEY }}
        JRELEASER_PROJECT_VERSION: 1.0.0
        JRELEASER_USER_HOME: ${{ github.workspace }}/smoketests-jreleaser/.jreleaser
      name: Clean
      run: 'cd smoketests-jreleaser

        ./gradlew clean -S

        '
      shell: bash
    - continue-on-error: true
      if: always()
      name: Cleanup
      run: './gradlew -stop

        rm -rf ~/.m2/repository/org/jreleaser

        rm -rf ~/.gradle/caches/modules-2/files-2.1/org.jreleaser

        '
      shell: bash
    strategy:
      fail-fast: false
      matrix:
        job:
        - args: --exclude-packager docker
          os: macos-latest
        - args: ''
          os: ubuntu-latest
        - args: --exclude-packager docker
          os: windows-latest
  build-maven:
    continue-on-error: true
    if: endsWith(${{ needs.precheck.outputs.version }}, '-SNAPSHOT')
    name: Maven ${{ matrix.job.os }}
    needs:
    - precheck
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - continue-on-error: true
      name: Decrypt secrets
      run: sh .github/scripts/decrypt-secrets.sh
      shell: bash
    - continue-on-error: true
      name: Setup Java
      uses: actions/setup-java@v4
      with:
        cache: gradle
        distribution: ${{ vars.JAVA_DISTRO }}
        java-version: ${{ vars.JAVA_VERSION }}
    - continue-on-error: true
      name: Build
      run: ./gradlew -PreproducibleBuild=true build publishToMavenLocal -S
      shell: bash
    - continue-on-error: true
      name: Checkout smoketests repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        path: smoketests-jreleaser
        repository: jreleaser/smoketests-jreleaser
        token: ${{ secrets.GIT_ACCESS_TOKEN }}
    - continue-on-error: true
      name: Cache Maven packages
      uses: actions/cache@v4
      with:
        key: setup-java-${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        path: ~/.m2/repository
        restore-keys: ${{ runner.os }}-m2
    - continue-on-error: true
      name: Prepare
      run: 'cd smoketests-jreleaser

        sed -i -e "s/0.0.0-SNAPSHOT/${{ needs.precheck.outputs.version }}/g" pom.xml

        sed -i -e "s/0.0.0-SNAPSHOT/${{ needs.precheck.outputs.version }}/g" build.xml

        sed -i -e "s/0.0.0-SNAPSHOT/${{ needs.precheck.outputs.version }}/g" gradle.properties

        sh ../.github/scripts/jacoco-instrument.sh

        '
      shell: bash
    - continue-on-error: true
      name: Setup Graal
      uses: graalvm/setup-graalvm@v1
      with:
        github-token: ${{ secrets.GIT_ACCESS_TOKEN }}
        java-version: ${{ vars.GRAAL_JAVA_VERSION }}
        version: ${{ vars.GRAAL_VERSION }}
    - continue-on-error: true
      env:
        JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        JRELEASER_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.GPG_PUBLIC_KEY }}
        JRELEASER_GPG_SECRET_KEY: ${{ secrets.GPG_SECRET_KEY }}
        JRELEASER_OUTPUT_DIRECTORY: out
        JRELEASER_PROJECT_VERSION: 1.0.0
        JRELEASER_USER_HOME: ${{ github.workspace }}/smoketests-jreleaser/.jreleaser
        MAVEN_OPTS: -javaagent:jacoco/jacocoagent.jar=includes=*jreleaser*,destfile=jreleaser-maven-${{
          runner.os }}.exec
      name: JReleaser
      run: "cd smoketests-jreleaser\necho \"::group::\u27A1\uFE0F build\"\nchmod +x\
        \ gradlew\n./gradlew build\nchmod +x mvnw\n./mvnw -B -ntp deploy -DaltDeploymentRepository=local::file:./target/staging-deploy\n\
        echo \"::endgroup::\"\necho \"::group::\u27A1\uFE0F json-schema\"\n./mvnw\
        \ -B -ntp jreleaser:json-schema\necho \"::endgroup::\"\necho \"::group::\u27A1\
        \uFE0F env\"\n./mvnw -B -ntp jreleaser:env\necho \"::endgroup::\"\necho \"\
        ::group::\u27A1\uFE0F assemble\"\n./mvnw -B -ntp jreleaser:assemble -DoutputDir=target\n\
        echo \"::endgroup::\"\necho \"::group::\u27A1\uFE0F config\"\n./mvnw -B -ntp\
        \ jreleaser:config -DoutputDir=target\necho \"::endgroup::\"\necho \"::group::\u27A1\
        \uFE0F changelog\"\n./mvnw -B -ntp jreleaser:changelog -DoutputDir=target\n\
        echo \"::endgroup::\"\necho \"::group::\u27A1\uFE0F download\"\n./mvnw -B\
        \ -ntp jreleaser:download -DoutputDir=target -Djreleaser.dry.run=true\necho\
        \ \"::endgroup::\"\necho \"::group::\u27A1\uFE0F catalog\"\n./mvnw -B -ntp\
        \ jreleaser:catalog -DoutputDir=target -Djreleaser.select.current.platform=true\n\
        echo \"::endgroup::\"\necho \"::group::\u27A1\uFE0F checksum\"\n./mvnw -B\
        \ -ntp jreleaser:checksum -DoutputDir=target -Djreleaser.select.current.platform=true\n\
        echo \"::endgroup::\"\necho \"::group::\u27A1\uFE0F sign\"\n./mvnw -B -ntp\
        \ jreleaser:sign -DoutputDir=target -Djreleaser.select.current.platform=true\n\
        echo \"::endgroup::\"\necho \"::group::\u27A1\uFE0F deploy\"\n./mvnw -B -ntp\
        \ jreleaser:deploy -DoutputDir=target -Djreleaser.dry.run=true\necho \"::endgroup::\"\
        \necho \"::group::\u27A1\uFE0F upload\"\n./mvnw -B -ntp jreleaser:upload -DoutputDir=target\
        \ -Djreleaser.select.current.platform=true -Djreleaser.dry.run=true\necho\
        \ \"::endgroup::\"\necho \"::group::\u27A1\uFE0F release\"\n./mvnw -B -ntp\
        \ jreleaser:release -DoutputDir=target -Djreleaser.select.current.platform=true\
        \ -Djreleaser.dry.run=true\necho \"::endgroup::\"\necho \"::group::\u27A1\uFE0F\
        \ prepare\"\n./mvnw -B -ntp jreleaser:prepare -DoutputDir=target -Djreleaser.select.current.platform=true\
        \ ${{ matrix.job.args }}\necho \"::endgroup::\"\necho \"::group::\u27A1\uFE0F\
        \ package\"\n./mvnw -B -ntp jreleaser:package -DoutputDir=target -Djreleaser.select.current.platform=true\
        \ ${{ matrix.job.args }}\necho \"::endgroup::\"\necho \"::group::\u27A1\uFE0F\
        \ publish\"\n./mvnw -B -ntp jreleaser:publish -DoutputDir=target -Djreleaser.select.current.platform=true\
        \ -Djreleaser.dry.run=true ${{ matrix.job.args }}\necho \"::endgroup::\"\n\
        echo \"::group::\u27A1\uFE0F full-release\"\n./mvnw -B -ntp jreleaser:full-release\
        \ -DoutputDir=target -Djreleaser.select.current.platform=true -Djreleaser.dry.run=true\
        \ ${{ matrix.job.args }}\necho \"::endgroup::\"\necho \"::group::\u27A1\uFE0F\
        \ announce\"\n./mvnw -B -ntp jreleaser:announce -DoutputDir=target -Djreleaser.dry.run=true\n\
        echo \"::endgroup::\"\necho \"::group::\u27A1\uFE0F template generate\"\n\
        ./mvnw -B -ntp jreleaser:template-generate -Djreleaser.announcer.name=discord\n\
        ./mvnw -B -ntp jreleaser:template-generate -Djreleaser.assembler.type=jlink\
        \ -Djreleaser.assembler.name=app-standalone\n./mvnw -B -ntp jreleaser:template-generate\
        \ -Djreleaser.template.packager.name=brew -Djreleaser.template.distribution.name=app\n\
        echo \"::endgroup::\"\necho \"::group::\u27A1\uFE0F init\"\n./mvnw -B -ntp\
        \ jreleaser:init -Djreleaser.template.overwrite=true -Djreleaser.init.format=yml\n\
        ./mvnw -B -ntp jreleaser:init -Djreleaser.template.overwrite=true -Djreleaser.init.format=toml\n\
        ./mvnw -B -ntp jreleaser:init -Djreleaser.template.overwrite=true -Djreleaser.init.format=json\n\
        echo \"::endgroup::\"\necho \"::group::\u27A1\uFE0F auto-config\"\n./mvnw\
        \ -B -ntp jreleaser:auto-config-release -Djreleaser.dry.run=true\necho \"\
        ::endgroup::\"\n"
      shell: bash
    - continue-on-error: true
      if: always()
      name: JReleaser output
      uses: actions/upload-artifact@v4
      with:
        name: jreleaser-maven-${{ runner.os }}
        path: 'smoketests-jreleaser/target/jreleaser/trace.log

          smoketests-jreleaser/target/jreleaser/output.properties

          smoketests-jreleaser/target/jreleaser/release/CHANGELOG.md

          smoketests-jreleaser/target/jreleaser/prepare

          '
        retention-days: 7
    - continue-on-error: true
      if: always()
      name: JaCoCo upload
      uses: actions/upload-artifact@v4
      with:
        name: jacoco-maven-${{ runner.os }}
        path: smoketests-jreleaser/*.exec
        retention-days: 1
    - continue-on-error: true
      if: always()
      name: Cleanup
      run: './gradlew -stop

        rm -rf ~/.m2/repository/org/jreleaser

        rm -rf ~/.gradle/caches/modules-2/files-2.1/org.jreleaser

        '
      shell: bash
    strategy:
      fail-fast: false
      matrix:
        job:
        - args: -Djreleaser.excluded.packagers=docker
          os: macos-latest
        - args: ''
          os: ubuntu-latest
        - args: -Djreleaser.excluded.packagers=docker
          os: windows-latest
  build-tool:
    continue-on-error: true
    if: endsWith(${{ needs.precheck.outputs.version }}, '-SNAPSHOT')
    name: Tool ${{ matrix.job.os }}
    needs:
    - precheck
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - continue-on-error: true
      name: Decrypt secrets
      run: sh .github/scripts/decrypt-secrets.sh
      shell: bash
    - continue-on-error: true
      name: Setup Java
      uses: actions/setup-java@v4
      with:
        cache: gradle
        distribution: ${{ vars.JAVA_DISTRO }}
        java-version: ${{ vars.JAVA_VERSION }}
    - continue-on-error: true
      name: Build
      run: ./gradlew -PreproducibleBuild=true build publishToMavenLocal -S
      shell: bash
    - continue-on-error: true
      name: Checkout smoketests repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        path: smoketests-jreleaser
        repository: jreleaser/smoketests-jreleaser
        token: ${{ secrets.GIT_ACCESS_TOKEN }}
    - continue-on-error: true
      name: Cache Maven packages
      uses: actions/cache@v4
      with:
        key: setup-java-${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        path: ~/.m2/repository
        restore-keys: ${{ runner.os }}-m2
    - continue-on-error: true
      name: Prepare
      run: 'cd smoketests-jreleaser

        cp ../plugins/jreleaser-tool-provider/build/libs/jreleaser-tool-provider-${{
        needs.precheck.outputs.version }}.jar jreleaser.jar

        sed -i -e "s/0.0.0-SNAPSHOT/${{ needs.precheck.outputs.version }}/g" pom.xml

        sed -i -e "s/0.0.0-SNAPSHOT/${{ needs.precheck.outputs.version }}/g" build.xml

        sed -i -e "s/0.0.0-SNAPSHOT/${{ needs.precheck.outputs.version }}/g" gradle.properties

        sh ../.github/scripts/jacoco-instrument.sh

        '
      shell: bash
    - continue-on-error: true
      name: Setup Graal
      uses: graalvm/setup-graalvm@v1
      with:
        github-token: ${{ secrets.GIT_ACCESS_TOKEN }}
        java-version: ${{ vars.GRAAL_JAVA_VERSION }}
        version: ${{ vars.GRAAL_VERSION }}
    - continue-on-error: true
      env:
        JAVA_OPTS: -javaagent:jacoco/jacocoagent.jar=includes=*jreleaser*,destfile=jreleaser-tool-${{
          runner.os }}.exec
        JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        JRELEASER_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.GPG_PUBLIC_KEY }}
        JRELEASER_GPG_SECRET_KEY: ${{ secrets.GPG_SECRET_KEY }}
        JRELEASER_OUTPUT_DIRECTORY: out
        JRELEASER_PROJECT_VERSION: 1.0.0
        JRELEASER_USER_HOME: ${{ github.workspace }}/smoketests-jreleaser/.jreleaser
      name: JReleaser
      run: "cd smoketests-jreleaser\necho \"::group::\u27A1\uFE0F build\"\nchmod +x\
        \ gradlew\n./gradlew build\nchmod +x mvnw\n./mvnw -B -ntp deploy -DaltDeploymentRepository=local::file:./target/staging-deploy\n\
        echo \"::endgroup::\"\necho \"::group::\u27A1\uFE0F json-schema\"\njava \"\
        ${JAVA_OPTS}\" -jar jreleaser.jar json-schema\necho \"::endgroup::\"\necho\
        \ \"::group::\u27A1\uFE0F env\"\njava \"${JAVA_OPTS}\" -jar jreleaser.jar\
        \ env\necho \"::endgroup::\"\necho \"::group::\u27A1\uFE0F assemble\"\njava\
        \ \"${JAVA_OPTS}\" -jar jreleaser.jar assemble -PoutputDir=out\necho \"::endgroup::\"\
        \necho \"::group::\u27A1\uFE0F config\"\njava \"${JAVA_OPTS}\" -jar jreleaser.jar\
        \ config -PoutputDir=out\necho \"::endgroup::\"\necho \"::group::\u27A1\uFE0F\
        \ changelog\"\njava \"${JAVA_OPTS}\" -jar jreleaser.jar changelog -PoutputDir=out\n\
        echo \"::endgroup::\"\necho \"::group::\u27A1\uFE0F download\"\njava \"${JAVA_OPTS}\"\
        \ -jar jreleaser.jar download -PoutputDir=out --dry-run\necho \"::endgroup::\"\
        \necho \"::group::\u27A1\uFE0F catalog\"\njava \"${JAVA_OPTS}\" -jar jreleaser.jar\
        \ catalog -PoutputDir=out --select-current-platform\necho \"::endgroup::\"\
        \necho \"::group::\u27A1\uFE0F checksum\"\njava \"${JAVA_OPTS}\" -jar jreleaser.jar\
        \ checksum -PoutputDir=out --select-current-platform\necho \"::endgroup::\"\
        \necho \"::group::\u27A1\uFE0F sign\"\njava \"${JAVA_OPTS}\" -jar jreleaser.jar\
        \ sign -PoutputDir=out --select-current-platform\necho \"::endgroup::\"\n\
        echo \"::group::\u27A1\uFE0F deploy\"\njava \"${JAVA_OPTS}\" -jar jreleaser.jar\
        \ deploy -PoutputDir=out --dry-run\necho \"::endgroup::\"\necho \"::group::\u27A1\
        \uFE0F upload\"\njava \"${JAVA_OPTS}\" -jar jreleaser.jar upload --select-current-platform\
        \ -PoutputDir=out --dry-run\necho \"::endgroup::\"\necho \"::group::\u27A1\
        \uFE0F release\"\njava \"${JAVA_OPTS}\" -jar jreleaser.jar release --select-current-platform\
        \ -PoutputDir=out --dry-run\necho \"::endgroup::\"\necho \"::group::\u27A1\
        \uFE0F prepare\"\njava \"${JAVA_OPTS}\" -jar jreleaser.jar prepare --select-current-platform\
        \ -PoutputDir=out ${{ matrix.job.args }}\necho \"::endgroup::\"\necho \"::group::\u27A1\
        \uFE0F package\"\njava \"${JAVA_OPTS}\" -jar jreleaser.jar package --select-current-platform\
        \ -PoutputDir=out ${{ matrix.job.args }}\necho \"::endgroup::\"\necho \"::group::\u27A1\
        \uFE0F publish\"\njava \"${JAVA_OPTS}\" -jar jreleaser.jar publish --select-current-platform\
        \ -PoutputDir=out --dry-run ${{ matrix.job.args }}\necho \"::endgroup::\"\n\
        echo \"::group::\u27A1\uFE0F full-release\"\njava \"${JAVA_OPTS}\" -jar jreleaser.jar\
        \ full-release -PoutputDir=out --select-current-platform --dry-run ${{ matrix.job.args\
        \ }}\necho \"::endgroup::\"\necho \"::group::\u27A1\uFE0F announce\"\njava\
        \ \"${JAVA_OPTS}\" -jar jreleaser.jar announce -PoutputDir=out --dry-run\n\
        echo \"::endgroup::\"\necho \"::group::\u27A1\uFE0F template generate\"\n\
        java \"${JAVA_OPTS}\" -jar jreleaser.jar template generate --announcer discord\n\
        java \"${JAVA_OPTS}\" -jar jreleaser.jar template generate --assembler-type\
        \ jlink --assembler-name app-standalone\njava \"${JAVA_OPTS}\" -jar jreleaser.jar\
        \ template generate --packager brew --distribution app\necho \"::endgroup::\"\
        \necho \"::group::\u27A1\uFE0F init\"\njava \"${JAVA_OPTS}\" -jar jreleaser.jar\
        \ init --overwrite --format yml\njava \"${JAVA_OPTS}\" -jar jreleaser.jar\
        \ init --overwrite --format toml\njava \"${JAVA_OPTS}\" -jar jreleaser.jar\
        \ init --overwrite --format json\necho \"::endgroup::\"\necho \"::group::\u27A1\
        \uFE0F auto-config\"\njava \"${JAVA_OPTS}\" -jar jreleaser.jar release --auto-config\
        \ --dry-run\necho \"::endgroup::\"\n"
      shell: bash
    - continue-on-error: true
      if: always()
      name: JReleaser output
      uses: actions/upload-artifact@v4
      with:
        name: jreleaser-tool-${{ runner.os }}
        path: 'smoketests-jreleaser/out/jreleaser/trace.log

          smoketests-jreleaser/out/jreleaser/output.properties

          smoketests-jreleaser/out/jreleaser/release/CHANGELOG.md

          smoketests-jreleaser/out/jreleaser/prepare

          '
        retention-days: 7
    - continue-on-error: true
      if: always()
      name: JaCoCo upload
      uses: actions/upload-artifact@v4
      with:
        name: jacoco-tool-${{ runner.os }}
        path: smoketests-jreleaser/*.exec
        retention-days: 1
    - continue-on-error: true
      if: always()
      name: Cleanup
      run: './gradlew -stop

        rm -rf ~/.m2/repository/org/jreleaser

        rm -rf ~/.gradle/caches/modules-2/files-2.1/org.jreleaser

        '
      shell: bash
    strategy:
      fail-fast: false
      matrix:
        job:
        - args: -xp docker
          os: macos-latest
        - args: ''
          os: ubuntu-latest
        - args: -xp docker
          os: windows-latest
  codecov:
    continue-on-error: true
    if: endsWith(${{ needs.precheck.outputs.version }}, '-SNAPSHOT')
    name: Codecov
    needs:
    - precheck
    - build-cli
    - build-tool
    - build-ant
    - build-gradle
    - build-maven
    - unit-tests
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - continue-on-error: true
      name: Decrypt secrets
      run: sh .github/scripts/decrypt-secrets.sh
      shell: bash
    - continue-on-error: true
      name: Setup Java
      uses: actions/setup-java@v4
      with:
        cache: gradle
        distribution: ${{ vars.JAVA_DISTRO }}
        java-version: ${{ vars.JAVA_VERSION }}
    - continue-on-error: true
      name: Build
      run: ./gradlew classes
    - continue-on-error: true
      name: Download JaCoCo execution data
      uses: actions/download-artifact@v4
      with:
        merge-multiple: true
        path: jacoco
        pattern: jacoco-*
    - continue-on-error: true
      name: JaCoCo merge
      run: sh .github/scripts/jacoco-merge.sh
    - continue-on-error: true
      name: JaCoCo report
      run: sh .github/scripts/jacoco-report.sh
    - continue-on-error: true
      name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        fail_ci_if_error: false
        files: build/reports/jacoco/aggregate/jacocoTestReport.xml
        flags: smoke-tests
        name: jreleaser-smoke-tests
        token: ${{ secrets.CODECOV_TOKEN }}
        verbose: true
    - continue-on-error: true
      if: always()
      name: Cleanup
      run: 'rm -rf ~/.gradle/caches/build-cache-1

        ./gradlew -stop

        '
      shell: bash
  coveralls:
    continue-on-error: true
    if: endsWith(${{ needs.precheck.outputs.version }}, '-SNAPSHOT')
    name: Coveralls
    needs:
    - precheck
    - build-cli
    - build-tool
    - build-ant
    - build-gradle
    - build-maven
    - unit-tests
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - continue-on-error: true
      name: Decrypt secrets
      run: sh .github/scripts/decrypt-secrets.sh
      shell: bash
    - continue-on-error: true
      name: Setup Java
      uses: actions/setup-java@v4
      with:
        cache: gradle
        distribution: ${{ vars.JAVA_DISTRO }}
        java-version: ${{ vars.JAVA_VERSION }}
    - continue-on-error: true
      name: Build
      run: ./gradlew classes
    - continue-on-error: true
      name: Download JaCoCo execution data
      uses: actions/download-artifact@v4
      with:
        merge-multiple: true
        path: jacoco
        pattern: jacoco-*
    - continue-on-error: true
      name: JaCoCo merge
      run: sh .github/scripts/jacoco-merge.sh
    - continue-on-error: true
      name: JaCoCo report
      run: sh .github/scripts/jacoco-report.sh
    - continue-on-error: true
      env:
        COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_TOKEN }}
      name: Upload coverage to Coveralls
      run: ./gradlew :coveralls
    - continue-on-error: true
      if: always()
      name: Cleanup
      run: 'rm -rf ~/.gradle/caches/build-cache-1

        ./gradlew -stop

        '
      shell: bash
  precheck:
    name: Precheck
    secrets: inherit
    uses: jreleaser/jreleaser/.github/workflows/step-precheck.yml@main
  sonar:
    continue-on-error: true
    if: endsWith(${{ needs.precheck.outputs.version }}, '-SNAPSHOT')
    name: Sonar
    needs:
    - precheck
    - build-cli
    - build-tool
    - build-ant
    - build-gradle
    - build-maven
    - unit-tests
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - continue-on-error: true
      name: Decrypt secrets
      run: sh .github/scripts/decrypt-secrets.sh
      shell: bash
    - continue-on-error: true
      name: Setup Java
      uses: actions/setup-java@v4
      with:
        cache: gradle
        distribution: ${{ vars.JAVA_DISTRO }}
        java-version: ${{ vars.JAVA_VERSION }}
    - continue-on-error: true
      name: Build
      run: ./gradlew check -PspotbugsEnabled=true
    - continue-on-error: true
      name: Download JaCoCo execution data
      uses: actions/download-artifact@v4
      with:
        merge-multiple: true
        path: jacoco
        pattern: jacoco-*
    - continue-on-error: true
      name: JaCoCo merge
      run: sh .github/scripts/jacoco-merge.sh
    - continue-on-error: true
      name: JaCoCo report
      run: sh .github/scripts/jacoco-report.sh
    - continue-on-error: true
      name: Sonar
      run: './gradlew sonarqube -Dsonar.login=${{ secrets.SONARCLOUD_TOKEN }} -PsonarEnabled=true

        '
    - continue-on-error: true
      if: always()
      name: Cleanup
      run: 'rm -rf ~/.gradle/caches/build-cache-1

        ./gradlew -stop

        '
      shell: bash
  unit-tests:
    continue-on-error: true
    if: endsWith(${{ needs.precheck.outputs.version }}, '-SNAPSHOT')
    name: Unit Test ${{ matrix.os }}
    needs:
    - precheck
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Decrypt secrets
      run: sh .github/scripts/decrypt-secrets.sh
      shell: bash
    - continue-on-error: true
      name: Setup Java
      uses: actions/setup-java@v4
      with:
        cache: gradle
        distribution: ${{ vars.JAVA_DISTRO }}
        java-version: ${{ vars.JAVA_VERSION }}
    - continue-on-error: true
      name: Test
      run: './gradlew check jacocoTestReport --no-build-cache

        ./gradlew :aggregateJacocoReport

        '
      shell: bash
    - continue-on-error: true
      name: Rename JaCoCo execution data
      run: "for execFile in $(find ./ -name \"*.exec\" -print); do\n    jacoco=$(dirname\
        \ \"$execFile\")\n    build=$(dirname \"$jacoco\")\n    project=$(dirname\
        \ \"$build\")\n    projectName=$(basename \"$project\")\n    mv \"$execFile\"\
        \ \"${projectName}-${{ runner.os }}.exec\"\ndone\nfor execFile in $(find ./\
        \ -name \"*.exec\" -print); do echo \"$execFile\"; done\n"
      shell: bash
    - continue-on-error: true
      if: always()
      name: JaCoCo upload
      uses: actions/upload-artifact@v4
      with:
        name: jacoco-${{ runner.os }}
        path: '*.exec'
        retention-days: 1
    - continue-on-error: true
      if: always()
      name: Cleanup
      run: './gradlew -stop

        rm -rf ~/.gradle/caches/build-cache-1

        '
      shell: bash
    strategy:
      fail-fast: true
      matrix:
        os:
        - ubuntu-latest
        - macOS-latest
        - windows-latest
name: SmokeTests
on:
  repository_dispatch:
    types: trigger-ga___smoke-tests.yml
permissions:
  actions: write
  contents: read
